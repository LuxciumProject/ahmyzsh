#!/usr/bin/env sh

function enable_startup_() {

  function disable_at_shutdown_() {
    (
      echo -e '\nfunction disable_at_shutdown_()\n'

      sudo nice -n -15 ionice -c 1 -n 1 systemctl disable \
      avahi-daemon.service \
      avahi-daemon.socket \
      bluetooth.service \
      dmraid-activation.service \
      dnf-makecache.service \
      dnfdaemon.service \
      firewalld.service \
      libvirtd.service \
      ModemManager.service \
      NetworkManager.service \
      packagekit.service \
      --now

      sudo nice -n -15 ionice -c 1 -n 1 systemctl disable \
      containerd \
      docker \
      docker.socket \
      sshd.service \
      --now

      sudo nice -n -15 ionice -c 1 -n 1 systemctl enable redis_6379.service --now
      sudo systemctl enable redis --now

      sudo ionice -c 1 -n 1 /bin/sh -c 'sudo /usr/sbin/akmods --from-init --force --verbose'
      sudo ionice -c 1 -n 1 /bin/sh -c 'sudo /usr/sbin/dkms autoinstall --force --verbose --kernelver $(uname -r)'

      sudo nice -n -15 ionice -c 1 -n 1 systemctl daemon-reload
      sudo nice -n -15 ionice -c 1 -n 1 systemctl daemon-reexec

    ) &
  }

  function kill_at_shutdown_() {
    (
      sleep 0 # 0.0 ― 5.0
      (
        sleep 1 # +@1.0
        sudo kill -15 $(pidof -w -x gnome-terminal-server)
        sleep 1 # +@2.0
        sudo kill -15 $(pidof -w -x terminator)
        sleep 2.1 # +@4.1
        sudo kill -09 $(pidof -w -x gnome-terminal-server)
        sudo kill -09 $(pidof -w -x terminator)

      ) &

      sleep 0.5 # 0.5 ― 4.5
      (
        sleep 1.5 # +@2.0
        sudo kill -15 $(pidof -w -x code)
        sleep 0.5 # +@2.5
        sudo kill -15 $(pidof -w -x code-insiders)
        sleep 1.8 # +@4.3
        sudo kill -09 $(pidof -w -x code)
        sudo kill -09 $(pidof -w -x code-insiders)
      ) &

      sleep 0.5 # 1.0 ― 4
      (
        sudo kill -15 $(pidof -w -x chrome)
        sleep 2 # +@3.0
        sudo kill -15 $(pidof -w -x chrome-stable)
        sleep 1.5 # +@4.5
        sudo kill -09 $(pidof -w -x chrome)
        sudo kill -09 $(pidof -w -x chrome-stable)
      ) &
      sleep 0.5 # 1.5 ― 3.5
      (
        sleep 2.5 # +@4
        sudo kill -15 $(pidof -w -x telegram-desktop)
        sleep 0.7 # +@4.7
        sudo kill -09 $(pidof -w -x telegram-desktop)
      ) &

      sleep 0.5 # 2 ― 3.8
      (
        sleep 2 # +@4.0
        sudo kill -15 $(pidof -w -x bluetoothd)
        sudo kill -15 $(pidof -w -x ckb-next)
        sudo kill -15 $(pidof -w -x ckb-next-animations/gradient)
        sudo kill -15 $(pidof -w -x ckb-next-animations/invaders)
        sudo kill -15 $(pidof -w -x ckb-next-daemon)
        sudo kill -15 $(pidof -w -x baloo_file)
        sudo kill -15 $(pidof -w -x dockerd)
        sudo kill -15 $(pidof -w -x containerd)
        sudo kill -15 $(pidof -w -x dolphin)
        sudo kill -15 $(pidof -w -x gitstatusd-linux-x86_64)
        sudo kill -15 $(pidof -w -x colord)
        sudo kill -15 $(pidof -w -x obexd)
        sudo kill -15 $(pidof -w -x upowerd)
        sudo kill -15 $(pidof -w -x ssh-agent)
        sudo kill -15 $(pidof -w -x sssd)
        sudo kill -15 $(pidof -w -x zsh)

        sleep 1 # +@5.0
        sudo kill -09 $(pidof -w -x bluetoothd)
        sudo kill -09 $(pidof -w -x ckb-next)
        sudo kill -09 $(pidof -w -x ckb-next-animations/gradient)
        sudo kill -09 $(pidof -w -x ckb-next-animations/invaders)
        sudo kill -09 $(pidof -w -x ckb-next-daemon)
        sudo kill -09 $(pidof -w -x baloo_file)
        sudo kill -09 $(pidof -w -x containerd)
        sudo kill -09 $(pidof -w -x dolphin)
        sudo kill -09 $(pidof -w -x gitstatusd-linux-x86_64)
        sudo kill -09 $(pidof -w -x obexd)
        sudo kill -09 $(pidof -w -x dockerd)
        sudo kill -09 $(pidof -w -x ssh-agent)
        sudo kill -09 $(pidof -w -x colord)
        sudo kill -09 $(pidof -w -x upowerd)
        sudo kill -09 $(pidof -w -x sssd)
        sudo kill -09 $(pidof -w -x sssd/sssd_be)
        sudo kill -09 $(pidof -w -x sssd/sssd_nss)
        sudo kill -09 $(pidof -w -x zsh)
      ) &
    ) &
  }

  function enable_at_startup_() {

    echo -e '\nfunction enable_at_startup_()\n'

    sudo nice -n -18 ionice -c 1 -n 7 systemctl enable \
    avahi-daemon.service \
    avahi-daemon.socket \
    bluetooth.service \
    dmraid-activation.service \
    dnf-makecache.service \
    dnfdaemon.service \
    firewalld.service \
    libvirtd.service \
    ModemManager.service \
    NetworkManager.service \
    packagekit.service \
    --now

    sudo nice -n -18 ionice -c 1 -n 7 systemctl enable \
    containerd \
    docker \
    docker.socket \
    sshd.service \
    --now

    sudo renice -n -14 -p $(pidof -w -x Xorg)
    sudo renice -n -12 -p $(pidof -w -x plasma_session)
    sudo renice -n -10 -p $(pidof -w -x kde5)
    sudo renice -n -8 -p $(pidof -w -x kwin_x11)
    sudo renice -n -6 -p $(pidof -w -x ksmserver)
    sudo renice -n -4 -p $(pidof -w -x plasmashell)
    sudo renice -n -2 -p $(pidof -w -x startplasma-x11)

    sudo ionice -c 1 -n 1 -p $(pidof -w -x Xorg)
    sudo ionice -c 1 -n 2 -p $(pidof -w -x plasma_session)
    sudo ionice -c 1 -n 5 -p $(pidof -w -x kde5)
    sudo ionice -c 1 -n 3 -p $(pidof -w -x kwin_x11)
    sudo ionice -c 1 -n 4 -p $(pidof -w -x ksmserver)
    sudo ionice -c 1 -n 6 -p $(pidof -w -x plasmashell)
    sudo ionice -c 1 -n 7 -p $(pidof -w -x startplasma-x11)

    # sudo systemctl enable redis --now
    # sudo systemctl start redis

    sudo ionice -c 3 systemctl daemon-reexec
    sudo ionice -c 3 systemctl daemon-reload

    sudo ionice -c 1 -n 1 /bin/sh -c 'sudo /usr/sbin/akmods --from-init --force --verbose'
    sudo ionice -c 1 -n 1 /bin/sh -c 'sudo /usr/sbin/dkms autoinstall --force --verbose --kernelver $(uname -r)'

  }

  function restart_now_() {
    echo -e '\nfunction rerestart_now_()\n'

    sudo systemctl enable containerd docker docker.socket sshd.service --now
    sudo systemctl enable redis_6379.service --now

    sudo ionice -c 2 -n 1 -p $(pidof -w -x chrome) &
    sudo renice -n -17 -p $(pidof -w -x chrome) &
    sudo ionice -c 2 -n 1 -p $(pidof -w -x zsh) &
    sudo renice -n -15 -p $(pidof -w -x zsh) &
    sudo ionice -c 2 -n 2 -p $(pidof -w -x gnome-terminal-server) &
    sudo renice -n -12 -p $(pidof -w -x gnome-terminal-server) &
    sudo ionice -c 2 -n 3 -p $(pidof -w -x dolphin) &
    sudo renice -n -10 -p $(pidof -w -x dolphin) &
    sudo ionice -c 1 -n 5 -p $(pidof -w -x code-insiders) &
    sudo renice -n 5 -p $(pidof -w -x code-insiders) &
    sudo ionice -c 1 -n 5 -p $(pidof -w -x code) &
    sudo renice -n 5 -p $(pidof -w -x code) &

    sleep 0.75
    echo ''
    sudo systemctl enable redis --now
  }

  # enable_systemctl down (5 seconds should be calculated for your system)
  if [[ $1 == 'down' ]]; then #
    disable_at_shutdown_ &    # 4 seconds operation of wich will be
    sleep 3                   # waiting 3 first seconds of previous
    kill_at_shutdown_ &       # opperation befor starting next
    sleep 5                   # total of 8 seconds to disable (enable_systemctl down)
  fi

  # enable_systemctl up
  if [[ $1 == 'up' ]]; then
    enable_at_startup_
  fi

  # enable_systemctl restart
  if [[ $1 == 'restart' ]]; then
    disable_at_shutdown_ && enable_at_startup_ && restart_now_ || exit 10
  fi

}

enable_startup_ "${@}"

__EXIT_STATUS="${?}"

unset -f enable_startup_

exit $__EXIT_STATUS

# sudo systemctl enable network.service

# Checking kmods exist for 5.9.16-100.fc32.x86_64            [  OK  ]
# Warning: Stopping dnf-makecache.service, but it can still be activated by:
#   dnf-makecache.timer
# Warning: Stopping libvirtd.service, but it can still be activated by:
#   libvirtd-ro.socket
#   libvirtd-admin.socket
#   libvirtd.socket
# Warning: Stopping systemd-udevd.service, but it can still be activated by:
#   systemd-udevd-control.socket
#   systemd-udevd-kernel.socket
# Failed to disable unit: Unit file network.service does not exist.
# redis_6379.service is not a native service, redirecting to systemd-sysv-install.
# Executing: /usr/lib/systemd/systemd-sysv-install disable redis_6379
# Removed /etc/systemd/system/sockets.target.wants/docker.socket.

# sudo kill -15 $(pidof -w -x code-insiders) &
# sudo kill -15 $(pidof -w -x code) &
# sudo kill -15 $(pidof -w -x upowerd) &
# sudo kill -15 $(pidof -w -x sssd) &
# sudo kill -15 $(pidof -w -x sssd/sssd_be) &
# sudo kill -15 $(pidof -w -x sssd/sssd_nss) &
# sudo kill -15 $(pidof -w -x gnome-terminal-server)
# sudo kill -15 $(pidof -w -x zsh)
# sudo kill -15 $(pidof -w -x abrt-applet)
# sudo kill -15 $(pidof -w -x abrt-dbus)
# sudo kill -15 $(pidof -w -x accounts-daemon)
# sudo kill -15 $(pidof -w -x akonadi_akonotes_resource)
# sudo kill -15 $(pidof -w -x akonadi_archivemail_agent)
# sudo kill -15 $(pidof -w -x akonadi_birthdays_resource)
# sudo kill -15 $(pidof -w -x akonadi_contacts_resource)
# sudo kill -15 $(pidof -w -x akonadi_control)
# sudo kill -15 $(pidof -w -x akonadi_followupreminder_agent)
# sudo kill -15 $(pidof -w -x akonadi_ical_resource)
# sudo kill -15 $(pidof -w -x akonadi_indexing_agent)
# sudo kill -15 $(pidof -w -x akonadi_maildir_resource)
# sudo kill -15 $(pidof -w -x akonadi_maildispatcher_agent)
# sudo kill -15 $(pidof -w -x akonadi_mailfilter_agent)
# sudo kill -15 $(pidof -w -x akonadi_migration_agent)
# sudo kill -15 $(pidof -w -x akonadi_newmailnotifier_agent)
# sudo kill -15 $(pidof -w -x akonadi_sendlater_agent)
# sudo kill -15 $(pidof -w -x akonadi_unifiedmailbox_agent)
# sudo kill -15 $(pidof -w -x akonadiserver)
# sudo kill -15 $(pidof -w -x alsactl)
# sudo kill -15 $(pidof -w -x at-spi-bus-launcher)
# sudo kill -15 $(pidof -w -x at-spi2-registryd)
# sudo kill -15 $(pidof -w -x atd)
# sudo kill -15 $(pidof -w -x auditd)
# sudo kill -15 $(pidof -w -x chronyd)
# sudo kill -15 $(pidof -w -x crond)
# sudo kill -15 $(pidof -w -x cupsd)
# sudo kill -15 $(pidof -w -x dbus-broker-launch)
# sudo kill -15 $(pidof -w -x dbus-broker)
# sudo kill -15 $(pidof -w -x dconf-service)
# sudo kill -15 $(pidof -w -x DiscoverNotifier)
# sudo kill -15 $(pidof -w -x dnsmasq)
# sudo kill -15 $(pidof -w -x fusermount)
# sudo kill -15 $(pidof -w -x gconfd-2)
# sudo kill -15 $(pidof -w -x geoclue-2.0/demos/agent)
# sudo kill -15 $(pidof -w -x gmenudbusmenuproxy)
# sudo kill -15 $(pidof -w -x gnome-keyring-daemon)
# sudo kill -15 $(pidof -w -x goa-daemon)
# sudo kill -15 $(pidof -w -x goa-identity-service)
# sudo kill -15 $(pidof -w -x gssproxy)
# sudo kill -15 $(pidof -w -x gvfs-afc-volume-monitor)
# sudo kill -15 $(pidof -w -x gvfs-goa-volume-monitor)
# sudo kill -15 $(pidof -w -x gvfs-gphoto2-volume-monitor)
# sudo kill -15 $(pidof -w -x gvfs-mtp-volume-monitor)
# sudo kill -15 $(pidof -w -x gvfs-udisks2-volume-monitor)
# sudo kill -15 $(pidof -w -x gvfsd-fuse)
# sudo kill -15 $(pidof -w -x gvfsd-metadata)
# sudo kill -15 $(pidof -w -x gvfsd)
# sudo kill -15 $(pidof -w -x imsettings-daemon)
# sudo kill -15 $(pidof -w -x irqbalance)
# sudo kill -15 $(pidof -w -x kaccess)
# sudo kill -15 $(pidof -w -x kactivitymanagerd)
# sudo kill -15 $(pidof -w -x kded5)
# sudo kill -15 $(pidof -w -x kdeinit5)
# sudo kill -15 $(pidof -w -x kglobalaccel5)
# sudo kill -15 $(pidof -w -x kio_http_cache_cleaner)
# sudo kill -15 $(pidof -w -x klauncher)
# sudo kill -15 $(pidof -w -x korgac)
# sudo kill -15 $(pidof -w -x kscreen_backend_launcher)
# sudo kill -15 $(pidof -w -x ksmserver)
# sudo kill -15 $(pidof -w -x ksysguardd)
# sudo kill -15 $(pidof -w -x kwalletd5)
# sudo kill -15 $(pidof -w -x kwin_x11)
# sudo kill -15 $(pidof -w -x mcelog)
# sudo kill -15 $(pidof -w -x ModemManager)
# sudo kill -15 $(pidof -w -x mount.ntfs)
# sudo kill -15 $(pidof -w -x mysqld)
# sudo kill -15 $(pidof -w -x nacl_helper)
# sudo kill -15 $(pidof -w -x NetworkManager)
# sudo kill -15 $(pidof -w -x org_kde_powerdevil)
# sudo kill -15 $(pidof -w -x packagekitd)
# sudo kill -15 $(pidof -w -x pcp/bin/pmcd)
# sudo kill -15 $(pidof -w -x pcp/bin/pmlogger)
# sudo kill -15 $(pidof -w -x pcscd)
# sudo kill -15 $(pidof -w -x pipewire-media-session)
# sudo kill -15 $(pidof -w -x pipewire)
# sudo kill -15 $(pidof -w -x plasma_session)
# sudo kill -15 $(pidof -w -x plasma-browser-integration-host)
# sudo kill -15 $(pidof -w -x plasmashell)
# sudo kill -15 $(pidof -w -x pmie)
# sudo kill -15 $(pidof -w -x polkit-kde-authentication-agent-1)
# sudo kill -15 $(pidof -w -x polkitd)
# sudo kill -15 $(pidof -w -x pulse/gconf-helper)
# sudo kill -15 $(pidof -w -x pulseaudio)
# sudo kill -15 $(pidof -w -x python3)
# sudo kill -15 $(pidof -w -x registry)
# sudo kill -15 $(pidof -w -x rngd)
# sudo kill -15 $(pidof -w -x rsyslogd)
# sudo kill -15 $(pidof -w -x rtkit-daemon)
# sudo kill -15 $(pidof -w -x sddm-helper)
# sudo kill -15 $(pidof -w -x sddm)
# sudo kill -15 $(pidof -w -x sedispatch)
# sudo kill -15 $(pidof -w -x smartd)
# sudo kill -15 $(pidof -w -x start_kdeinit)
# sudo kill -15 $(pidof -w -x startplasma-x11)
# sudo kill -15 $(pidof -w -x stratisd)
# sudo kill -15 $(pidof -w -x switcheroo-control)
# sudo kill -15 $(pidof -w -x systemd-homed)
# sudo kill -15 $(pidof -w -x systemd-journald)
# sudo kill -15 $(pidof -w -x systemd-logind)
# sudo kill -15 $(pidof -w -x systemd-machined)
# sudo kill -15 $(pidof -w -x systemd-udevd)
# sudo kill -15 $(pidof -w -x systemd-userdbd)
# sudo kill -15 $(pidof -w -x systemd-userwork)
# sudo kill -15 $(pidof -w -x systemd)
# sudo kill -15 $(pidof -w -x tracker-miner-fs)
# sudo kill -15 $(pidof -w -x tracker-miner-rss)
# sudo kill -15 $(pidof -w -x tracker-store)
# sudo kill -15 $(pidof -w -x udisks2/udisksd)
# sudo kill -15 $(pidof -w -x xdg-desktop-portal-gtk)
# sudo kill -15 $(pidof -w -x xdg-desktop-portal-kde)
# sudo kill -15 $(pidof -w -x xdg-desktop-portal)
# sudo kill -15 $(pidof -w -x xdg-document-portal)
# sudo kill -15 $(pidof -w -x xdg-permission-store)
# sudo kill -15 $(pidof -w -x xembedsniproxy)
# sudo kill -15 $(pidof -w -x xfconfd)
# sudo kill -15 $(pidof -w -x Xorg)

# ## Signaux standards
# man free.1
# man ps.1
# man uptime.1
# man atop.1
# man slabtop.1
# man vmstat.8
# man w.1
## Voici tout d'abord les signaux décrits dans le standard POSIX.1-1990 original :
#      Signal     Valeur    Action   Commentaire
#      ─────────────────────────────────────────────────────────────────────────
# Déconnexion détectée sur le terminal de contrôle ou mort du processus de contrôle:
#      SIGHUP        1       Term
#      Les signaux SIGsudo KILL et SIGSTOP ne peuvent ni capturés ni ignorés.
#      SIGINT        2       Term    Interruption depuis le clavier.
#      SIGQUIT       3       Core    Demande « Quitter » depuis le clavier.
#      SIGILL        4       Core    Instruction illégale.
#      SIGABRT       6       Core    Signal d'arrêt depuis abort(3).
#      SIGFPE        8       Core    Erreur mathématique virgule flottante.
#      SIGsudo KILL       9       Term    Signal « sudo KILL ».
#      SIGSEGV      11       Core    Référence mémoire invalide.
#      SIGPIPE      13       Term    Écriture dans un tube sans lecteur.
#      SIGALRM      14       Term    Temporisation alarm(2) écoulée.
#      SIGTERM      15       Term    Signal de fin.
#      SIGUSR1      10       Term    Signal utilisateur 1.
#      SIGUSR2      12       Term    Signal utilisateur 2.
#      SIGCHLD      17       Ign     Fils arrêté ou terminé.
#      SIGCONT      18       Cont    Continuer si arrêté.
#      SIGSTOP      19       Stop    Arrêt du processus.
#      SIGTSTP      20       Stop    Stop invoqué depuis le terminal.
#      SIGTTIN      21       Stop    Lecture sur le terminal en arrière-plan.
#      SIGTTOU      22       Stop    Écriture dans le terminal en arrière-plan.
#      ────────────────────────────────────────────────────────────────────────
## Ensuite, les signaux non décrits par POSIX.1-1990, mais présents dans les spécifications SUSv2 et POSIX.1-2001:
#      SIGBUS         07       Core    Erreur de bus (mauvais accès mémoire).
#      SIGPROF        27       Term    Expiration de la temporisation pour le suivi.
#      SIGSYS         31       Core    Mauvais argument de fonction (SVr4).
#      SIGTRAP        05       Core    Point d'arrêt rencontré.
#      SIGURG         23       Ign     Condition urgente sur socket (BSD 4.2).
#      SIGVTALRM      26       Term    Alarme virtuelle (BSD 4.2).
#      SIGXCPU        24       Core    Limite de temps CPU dépassée (BSD 4.2).
#      SIGXFSZ        25       Core    Taille de fichier excessive (BSD 4.2).
#      ─────────────────────────────────────────────────────────────────────────────
## Puis quelques signaux divers :
#      SIGIOT         6        Core    Arrêt IOT. Un synonyme de SIGABRT.
#      SIGSTKFLT      16       Term    Erreur de pile sur coprocesseur (inutilisé).
#      SIGIO          29       Term    E/S à nouveau possible(BSD 4.2).
#      SIGPWR         30       Term    Chute d'alimentation (System V).
#      SIGWINCH       28       Ign     Fenêtre redimensionnée (BSD 4.3, Sun).
#      SIGUNUSED      31       Core    Synonyme de SIGSYS

# enable_startup
## Extra code make it easy to copy paste only the function out to use elsewhere
#% 7.876s dracut-initqueue.service
#% 4.021s dnf-makecache.service
#% 2.039s systemd-udev-settle.service
#%  832ms udisks2.service
#%  815ms smartd.service
#%  664ms systemd-logind.service
#%  656ms pmlogger.service
#%  651ms akmods.service
#%  602ms dkms.service
#%  580ms firewalld.service
#%  571ms lvm2-monitor.service
#%  522ms initrd-switch-root.service
#%  336ms upower.service
#%  330ms sssd.service
#%  292ms pmie.service
#%  287ms systemd-tmpfiles-setup.service
#%  286ms pmcd.service
#%  228ms lvm2-pvscan@259:3.service
#%  218ms avahi-daemon.service
#%  197ms systemd-journal-flush.service
#%  194ms rtkit-daemon.service
#%  194ms libvirtd.service
#%  189ms initrd-parse-etc.service
#%  186ms systemd-homed.service
#%  186ms systemd-machined.service
#%  165ms user@1000.service
#%  163ms packagekit.service
#%  140ms ModemManager.service
#%  124ms dracut-cmdline.service
#%  115ms dbus-broker.service
#%  112ms polkit.service
#%  111ms dmraid-activation.service
#  --system              Operate on system systemd instance
#  --user                Operate on user systemd instance
#  --global              Operate on global user configuration
#* /usr/lib/systemd/system/docker.service
## Description=Docker Application Container Engine
## Documentation=https://docs.docker.com
#& After=
# network-online.target firewalld.service containerd.service
#& Wants=
# network-online.target
#& Requires=
# docker.socket containerd.service
#* [Unit] # /usr/lib/systemd/system/containerd.service
## Description=containerd container runtime
## Documentation=https://containerd.io
#& After=network.target local-fs.target
#* [Install]
#& WantedBy=multi-user.target
# function 8ujn() nji9-plkçèé
# 6+ () {
#   (
#     (
#       sudo dnf clean all &&
#         dnf makecache
#     ) &&
#       ( (
#         sudo nice -n -15 ionice -c 1 -n 2 dnf upgrade --downloadonly -y &
#       ) >/dev/null) 2>/dev/null
#   )
#   sudo nice -n -15 ionice -c 2 -n 0 dnf upgrade --setopt=keepcache=1
# }
# alias XXX="dnfup && playshutdown& sleep 4; sudo reboot"
#+ /usr/lib/systemd/system/containerd.service
#+ /usr/lib/systemd/system/containerd.service
#+ /usr/lib/systemd/system/containerd.service
#+ /usr/lib/systemd/system/containerd.service
# Copyright The containerd Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#* [Unit] containerd.service
#% Description=containerd container runtime
#% Documentation=https://containerd.io
#& After=
# network.target local-fs.target
#* [Service]
#& ExecStartPre=-/sbin/modprobe overlay
#& ExecStart=/usr/bin/containerd
#& Type=notify
#& Delegate=yes
#& sudo KillMode=process
#& Restart=always
#& RestartSec=5
# # Having non-zero Limit*s causes performance problems due to accounting overhead
# # in the kernel. We recommend using cgroups to do container-local accounting.
#& LimitNPROC=infinity
#& LimitCORE=infinity
#& LimitNOFILE=1048576
# # Comment TasksMax if your systemd version does not supports it.
# # Only systemd 226 and above support this version.
#& TasksMax=infinity
#& OOMScoreAdjust=-999
#* [Install]
#& WantedBy=multi-user.target
#+ /usr/lib/systemd/system/docker.service
#+ /usr/lib/systemd/system/docker.service
#+ /usr/lib/systemd/system/docker.service
#+ /usr/lib/systemd/system/docker.service
#* [Unit] docker.service
#% Description=Docker Application Container Engine
#% Documentation=https://docs.docker.com
#& After=
# network-online.target
# firewalld.service
# containerd.service
#& Wants=
# network-online.target
#& Requires=
# docker.socket
# containerd.service
#* [Service]
#& Type=notify
## the default is not to use systemd for cgroups because the delegate issues still
## exists and systemd currently does not support the cgroup feature set required
## for containers run by docker
#& ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
#& ExecReload=/bin/sudo kill -s HUP $MAINPID
#& TimeoutSec=0
#& RestartSec=2
#& Restart=always
#&
## Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
## Both the old, and new location are accepted by systemd 229 and up, so using the old location
## to make them work for either version of systemd.
#& StartLimitBurst=3
#&
## Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
## Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
## this option work for either version of systemd.
#& StartLimitInterval=60s
#&
## Having non-zero Limit*s causes performance problems due to accounting overhead
## in the kernel. We recommend using cgroups to do container-local accounting.
#& LimitNOFILE=infinity
#& LimitNPROC=infinity
#& LimitCORE=infinity
#&
## Comment TasksMax if your systemd version does not support it.
## Only systemd 226 and above support this option.
#& TasksMax=infinity
#&
## set delegate yes so that systemd does not reset the cgroups of docker containers
#& Delegate=yes
#&
## sudo kill only the docker process, not all processes in the cgroup
#& sudo KillMode=process
#& OOMScoreAdjust=-500
#&
#* [Install]
#& WantedBy=multi-user.target
#+ /etc/systemd/system/docker.socket
#+ /etc/systemd/system/docker.socket
#+ /etc/systemd/system/docker.socket
#+ /etc/systemd/system/docker.socket
#* [Unit] docker.socket
#% Description=Docker Socket for the API
#&
#* [Socket]
#& ListenStream=/run/docker.sock
#& SocketMode=0660
#& SocketUser=root
#& SocketGroup=docker
#&
#* [Install]
#& WantedBy=sockets.target
# --before
#            With list-dependencies, show the units that are ordered after the specified unit. In other words, recursively
#            list units following the Before= dependency.
#            When passed to the list-jobs command, for each printed job show which other jobs it is waiting for. May be
#            combined with --after to show both the jobs waiting for each job as well as all jobs each job is waiting for.
#+ sudo systemctl list-dependencies NetworkManager.service --no-pager --with-dependencies --before
#& Show the units that are ordered after the specified unit
#+ NetworkManager.service
#+ ● ├─network.service
#+ ● ├─NetworkManager-wait-online.service
#+ ● ├─multi-user.target
#+ ● │ ├─systemd-update-utmp-runlevel.service
#+ ● │ ├─graphical.target
#+ ● │ │ ├─systemd-update-utmp-runlevel.service
#+ ● │ │ └─shutdown.target
#+ ● │ └─shutdown.target
#+ ● ├─network.target
#+ ● │ ├─autofs.service
#+ ● │ ├─containerd.service
#+ ● │ ├─cups.service
#+ ● │ ├─fcoe.service
#+ ● │ ├─gssproxy.service
#+ ● │ ├─iscsi-shutdown.service
#+ ● │ ├─iscsi.service
#+ ● │ ├─iscsid.service
#+ ● │ ├─iscsiuio.service
#+ ● │ ├─kdump.service
#+ ● │ ├─libvirt-guests.service
#+ ● │ ├─libvirtd.service
#+ ● │ ├─lldpad.service
#+ ● │ ├─rc-local.service
#+ ● │ ├─sshd.service
#+ ● │ ├─systemd-user-sessions.service
#+ ● │ ├─network-online.target
#+ ● │ │ ├─autofs.service
#+ ● │ │ ├─dnf-makecache.service
#+ ● │ │ ├─docker.service
#+ ● │ │ ├─iscsi.service
#+ ● │ │ ├─kdump.service
#+ ● │ │ ├─nfs-mountd.service
#+ ● │ │ ├─nfs-server.service
#+ ● │ │ ├─pmcd.service
#+ ● │ │ ├─pmie.service
#+ ● │ │ ├─pmlogger.service
#+ ● │ │ ├─rpc-statd-notify.service
#+ ● │ │ ├─rpc-statd.service
#+ ● │ │ └─shutdown.target
#+ ● │ └─shutdown.target
#+ ● └─shutdown.target
#& show the units that are ordered after the specified unit
#  --after
#      With list-dependencies, show the units that are ordered before the specified unit. In other words, recursively
#      list units following the After= dependency.
#      Note that any After= dependency is automatically mirrored to create a Before= dependency. Temporal dependencies
#      may be specified explicitly, but are also created implicitly for units which are WantedBy= targets (see
#      systemd.target(5)), and as a result of other directives (for example RequiresMountsFor=). Both explicitly and
#      implicitly introduced dependencies are shown with list-dependencies.
#-!! sudo systemctl list-dependencies NetworkManager.service --no-pager --with-dependencies --after
#& Show the units that are ordered before the specified unit
#-!! NetworkManager.service
#-!! ● ├─dbus-broker.service
#-!! ● ├─dbus.socket
#-!! ● ├─netcf-transaction.service
#-!! ● ├─system.slice
#-!! ● ├─systemd-journald.socket
#-!! ● ├─basic.target
#-!! ● │ ├─-.mount
#-!! ● │ ├─dbus-broker.service
#-!! ● │ ├─systemd-ask-password-plymouth.path
#-!! ● │ ├─tmp.mount
#-!! ● │ ├─paths.target
#-!! ● │ │ ├─cups.path
#-!! ● │ │ ├─systemd-ask-password-console.path
#-!! ● │ │ └─systemd-ask-password-wall.path
#-!! ● │ ├─slices.target
#-!! ● │ │ ├─-.slice
#-!! ● │ │ ├─machine.slice
#-!! ● │ │ ├─system.slice
#-!! ● │ │ └─user.slice
#-!! ● │ ├─sockets.target
#-!! ● │ │ ├─avahi-daemon.socket
#-!! ● │ │ ├─cups.socket
#-!! ● │ │ ├─dbus.socket
#-!! ● │ │ ├─docker.socket
#-!! ● │ │ ├─iscsid.socket
#-!! ● │ │ ├─iscsiuio.socket
#-!! ● │ │ ├─libvirtd-admin.socket
#-!! ● │ │ ├─libvirtd-ro.socket
#-!! ● │ │ ├─libvirtd.socket
#-!! ● │ │ ├─multipathd.socket
#-!! ● │ │ ├─pcscd.socket
#-!! ● │ │ ├─sssd-kcm.socket
#-!! ● │ │ ├─syslog.socket
#-!! ● │ │ ├─systemd-initctl.socket
#-!! ● │ │ ├─systemd-journald-audit.socket
#-!! ● │ │ ├─systemd-journald-dev-log.socket
#-!! ● │ │ ├─systemd-journald.socket
#-!! ● │ │ ├─systemd-udevd-control.socket
#-!! ● │ │ ├─systemd-udevd-kernel.socket
#-!! ● │ │ ├─systemd-userdbd.socket
#-!! ● │ │ ├─virtlockd-admin.socket
#-!! ● │ │ ├─virtlockd.socket
#-!! ● │ │ ├─virtlogd-admin.socket
#-!! ● │ │ └─virtlogd.socket
#-!! ● │ └─sysinit.target
#-!! ● │   ├─auditd.service
#-!! ● │   ├─dev-hugepages.mount
#-!! ● │   ├─dev-mqueue.mount
#-!! ● │   ├─emergency.service
#-!! ● │   ├─import-state.service
#-!! ● │   ├─kmod-static-nodes.service
#-!! ● │   ├─ldconfig.service
#-!! ● │   ├─modprobe@drm.service
#-!! ● │   ├─plymouth-read-write.service
#-!! ● │   ├─proc-sys-fs-binfmt_misc.automount
#-!! ● │   ├─selinux-autorelabel-mark.service
#-!! ● │   ├─sys-fs-fuse-connections.mount
#-!! ● │   ├─sys-kernel-config.mount
#-!! ● │   ├─sys-kernel-tracing.mount
#-!! ● │   ├─systemd-binfmt.service
#-!! ● │   ├─systemd-firstboot.service
#-!! ● │   ├─systemd-hwdb-update.service
#-!! ● │   ├─systemd-journal-catalog-update.service
#-!! ● │   ├─systemd-journald.service
#-!! ● │   ├─systemd-machine-id-commit.service
#-!! ● │   ├─systemd-modules-load.service
#-!! ● │   ├─systemd-sysctl.service
#-!! ● │   ├─systemd-sysusers.service
#-!! ● │   ├─systemd-timesyncd.service
#-!! ● │   ├─systemd-tmpfiles-setup-dev.service
#-!! ● │   ├─systemd-tmpfiles-setup.service
#-!! ● │   ├─systemd-udev-settle.service
#-!! ● │   ├─systemd-udev-trigger.service
#-!! ● │   ├─systemd-udevd.service
#-!! ● │   ├─systemd-update-done.service
#-!! ● │   ├─systemd-update-utmp.service
#-!! ● │   ├─systemd-userdbd.service
#-!! ● │   ├─cryptsetup.target
#-!! ● │   │ ├─dmraid-activation.service
#-!! ● │   │ ├─systemd-ask-password-console.path
#-!! ● │   │ └─systemd-ask-password-wall.path
#-!! ● │   ├─emergency.target
#-!! ● │   │ ├─emergency.service
#-!! ● │   │ └─import-state.service
#-!! ● │   ├─local-fs.target
#-!! ● │   │ ├─boot-efi.mount
#-!! ● │   │ ├─boot.mount
#-!! ● │   │ ├─home.mount
#-!! ● │   │ ├─ostree-remount.service
#-!! ● │   │ ├─run-media-luxcium-B.mount
#-!! ● │   │ ├─run-user-1000-doc.mount
#-!! ● │   │ ├─run-user-1000-gvfs.mount
#-!! ● │   │ ├─run-user-1000.mount
#-!! ● │   │ ├─systemd-fsck-root.service
#-!! ● │   │ ├─systemd-remount-fs.service
#-!! ● │   │ ├─tmp.mount
#-!! ● │   │ ├─var-lib-machines.mount
#-!! ● │   │ └─local-fs-pre.target
#-!! ● │   │   ├─dm-event.service
#-!! ● │   │   ├─dmraid-activation.service
#-!! ● │   │   ├─lvm2-monitor.service
#-!! ● │   │   ├─multipathd.service
#-!! ● │   │   ├─stratisd.service
#-!! ● │   │   ├─systemd-remount-fs.service
#-!! ● │   │   └─systemd-tmpfiles-setup-dev.service
#-!! ● │   └─swap.target
#-!! ● │     ├─dev-disk-by\x2did-dm\x2dname\x2dfedora\x2d\x2dnvme\x2dsystem_swap.swap
#-!! ● │     ├─dev-disk-by\x2did-d-!!m\x2duuid\x2dLVM\x2dpbjpHGNkmuCypQ661gOqoVD2mkGe3R1YjNCoWaKtJ0Ca1lcR8PLIOr4mVH30rKk4.swap
#-!! ● │     ├─dev-disk-by\x2dlabel-SWAP.swap
#-!! ● │     ├─dev-disk-by\x2duuid-3777e4e7\x2dfaf2\x2d455a\x2db468\x2dfb7fc412ea6b.swap
#-!! ● │     ├─dev-dm\x2d1.swap
#-!! ● │     ├─dev-fedora\x2dnvme-system_swap.swap
#-!! ● │     └─dev-mapper-fedora\x2d\x2dnvme\x2dsystem_swap.swap
#-!! ● ├─network-pre.target
#-!! ● │ ├─firewalld.service
#-!! ● │ └─nftables.service
#-!! ● └─sysinit.target
#-!! ●   ├─auditd.service
#-!! ●   ├─dev-hugepages.mount
#-!! ●   ├─dev-mqueue.mount
#-!! ●   ├─emergency.service
#-!! ●   ├─import-state.service
#-!! ●   ├─kmod-static-nodes.service
#-!! ●   ├─ldconfig.service
#-!! ●   ├─modprobe@drm.service
#-!! ●   ├─plymouth-read-write.service
#-!! ●   ├─proc-sys-fs-binfmt_misc.automount
#-!! ●   ├─selinux-autorelabel-mark.service
#-!! ●   ├─sys-fs-fuse-connections.mount
#-!! ●   ├─sys-kernel-config.mount
#-!! ●   ├─sys-kernel-tracing.mount
#-!! ●   ├─systemd-binfmt.service
#-!! ●   ├─systemd-firstboot.service
#-!! ●   ├─systemd-hwdb-update.service
#-!! ●   ├─systemd-journal-catalog-update.service
#-!! ●   ├─systemd-journald.service
#-!! ●   ├─systemd-machine-id-commit.service
#-!! ●   ├─systemd-modules-load.service
#-!! ●   ├─systemd-sysctl.service
#-!! ●   ├─systemd-sysusers.service
#-!! ●   ├─systemd-timesyncd.service
#-!! ●   ├─systemd-tmpfiles-setup-dev.service
#-!! ●   ├─systemd-tmpfiles-setup.service
#-!! ●   ├─systemd-udev-settle.service
#-!! ●   ├─systemd-udev-trigger.service
#-!! ●   ├─systemd-udevd.service
#-!! ●   ├─systemd-update-done.service
#-!! ●   ├─systemd-update-utmp.service
#-!! ●   ├─systemd-userdbd.service
#-!! ●   ├─cryptsetup.target
#-!! ●   │ ├─dmraid-activation.service
#-!! ●   │ ├─systemd-ask-password-console.path
#-!! ●   │ └─systemd-ask-password-wall.path
#-!! ●   ├─emergency.target
#-!! ●   │ ├─emergency.service
#-!! ●   │ └─import-state.service
#-!! ●   ├─local-fs.target
#-!! ●   │ ├─boot-efi.mount
#-!! ●   │ ├─boot.mount
#-!! ●   │ ├─home.mount
#-!! ●   │ ├─ostree-remount.service
#-!! ●   │ ├─run-media-luxcium-B.mount
#-!! ●   │ ├─run-user-1000-doc.mount
#-!! ●   │ ├─run-user-1000-gvfs.mount
#-!! ●   │ ├─run-user-1000.mount
#-!! ●   │ ├─systemd-fsck-root.service
#-!! ●   │ ├─systemd-remount-fs.service
#-!! ●   │ ├─tmp.mount
#-!! ●   │ ├─var-lib-machines.mount
#-!! ●   │ └─local-fs-pre.target
#-!! ●   │   ├─dm-event.service
#-!! ●   │   ├─dmraid-activation.service
#-!! ●   │   ├─lvm2-monitor.service
#-!! ●   │   ├─multipathd.service
#-!! ●   │   ├─stratisd.service
#-!! ●   │   ├─systemd-remount-fs.service
#-!! ●   │   └─systemd-tmpfiles-setup-dev.service
#-!! ●   └─swap.target
#-!! ●     ├─dev-disk-by\x2did-dm\x2dname\x2dfedora\x2d\x2dnvme\x2dsystem_swap.swap
#-!! ●     ├─dev-disk-by\x2did- #[...]
#-!!          dm\x2duuid\x2dLVM\x2dpbjpHGNkmuCypQ661gOqoVD2mkGe3R1YjNCoWaKtJ0Ca1lcR8PLIOr4mVH30rKk4.swap
#-!! ●     ├─dev-disk-by\x2dlabel-SWAP.swap
#-!! ●     ├─dev-disk-by\x2duuid-3777e4e7\x2dfaf2\x2d455a\x2db468\x2dfb7fc412ea6b.swap
#-!! ●     ├─dev-dm\x2d1.swap
#-!! ●     ├─dev-fedora\x2dnvme-system_swap.swap
#-!! ●     └─dev-mapper-fedora\x2d\x2dnvme\x2dsystem_swap.swap

# sudo nice -n -15 ionice -c 1 -n 2 /bin/sh -c "sudo nice -n -15 ionice /usr/sbin/akmods --from-init --verbose"

# sudo nice -n -15 ionice -c 1 -n 2 /bin/sh -c "sudo nice -n -15 ionice /usr/sbin/dkms autoinstall --verbose # --kernelver $(uname -r)"

# sudo nice -n -15 ionice -c 1 -n 2 /bin/sh -c "sudo nice -n -15 ionice /usr/sbin/dkms autoinstall --verbose"

# dkms.service \
# akmods.service \
# pmcd.service \
# pmie.service \
# pmlogger.service \
# switcheroo-control.service \
# systemd-machined.service \
# systemd-udevd.service \
# upower.service \

# sudo nice -n -15 ionice -c 1 -n 1 systemctl enable redis_6379.service

# pmcd.service
# pmie.service
# pmlogger.service
# switcheroo-control.service
# systemd-machined.service
# systemd-udevd.service
# upower.service --now
