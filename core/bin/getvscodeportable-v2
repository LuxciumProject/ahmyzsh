#!/usr/bin/env bash

#$ LUXCIUM LICENSE *NO* PERMISSION GRANTED - PROVIDED "AS IS" - WITHOUT WARRANTY
#$
#% Copyright © 2020 - LUXCIUM† (Benjamin Vincent Kasapoglu) <luxcium@neb401.com>
#%
#% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ALL KIND, EXPRESS OR
#% IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#% FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#% AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ALL CLAIM, DAMAGES OR OTHER
#% LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#% SOFTWARE.
#&
#& *NO* PERMISSION ARE GRANTED. NOT TO PUBLISH, NOT TO DISTRIBUTE, NOT TO
#& SUBLICENSE, AND/OR NOT TO SELL COPIES OF THE SOFTWARE.
#& YOU MAY USE IT ONLY FOR YOURSELF AND YOU HAVE THE RIGHT TO: DISTRIBUTE TO
#& YOUR FRIENDS, TO YOUR STUDENTS, OR TO YOU COWORKER FOR PERSONAL USE AT HOME
#& AT SCHOOL OR AT WORK.
#&
#& IN ANY CASES THE COPYRIGHT AND NOTICE ABOVE MUST BE INCLUDED.
#$
#$ Scientia es lux principium✨ ™

# ${AHMYZSH}/custom-zsh/sources/functions/getvscodeportable.zsh
# ${AHMYZSH}/core/bin/getvscodeportable-v2
function getvscodeportable_() {
  ## CONSTANTS AND VARIABLES DEFINITIONS
  {
    # † ======================================================================

    VSCODEURL_STABLE_RPM='https://go.microsoft.com/fwlink/?LinkID=760867'
    VSCODEURL_STABLE_TAR_GZ='https://go.microsoft.com/fwlink/?LinkID=620884'
    VSCODEURL_INSIDERS_RPM='https://go.microsoft.com/fwlink/?LinkID=760866'
    VSCODEURL_INSIDERS_TAR_GZ='https://go.microsoft.com/fwlink/?LinkId=723968'

    VSCODE_URL_STABLE='https://update.code.visualstudio.com/latest/linux-x64/stable'
    VSCODE_SHORTPATH_STABLE='code-stable'
    VSCODE_CHANNEL_STABLE='stable'

    VSCODE_URL_INSIDER='https://update.code.visualstudio.com/latest/linux-x64/insider'
    VSCODE_SHORTPATH_INSIDER='code-insider'
    VSCODE_CHANNEL_INSIDER='insider'

    ## CUSTOM VARIABLES DEFINITIONS
    # † ======================================================================

    vscode_url="${VSCODE_URL_STABLE}"
    vscode_shortpath="${VSCODE_SHORTPATH_STABLE}"
    vscode_channel="${VSCODE_CHANNEL_STABLE}"

    vschannel="${1}" # 'STABLE' or 'INSIDERS'
    if [[ "${vschannel}" = 'INSIDERS' ]]; then
      vscode_url="${VSCODE_URL_INSIDER}"
      vscode_shortpath="${VSCODE_SHORTPATH_INSIDER}"
      vscode_channel="${VSCODE_CHANNEL_INSIDER}"
    fi

    ## INTERNAL VARIABLES DEFINITIONS
    # † ======================================================================

    myuxidlong="$(LUXID)"
    working_location="/tmp/$(echo LXCM/vscode-${vschannel}/$(shortID))"
    download_location="${working_location}/download"

    ## CREATE THE DOWNLOAD FOLDER IN /tmp
    # † ======================================================================

    iamtheuser="$(whoami)"
    echo iamtheuser="$(whoami)"
    (sudo mkdir -p "${download_location}") || exit 2
    (sudo chown -R ${iamtheuser} "${working_location}") || exit 3

    # ========================================================================

    unset -v VSCODEURL_STABLE_RPM
    unset -v VSCODEURL_STABLE_TAR_GZ
    unset -v VSCODEURL_INSIDERS_RPM
    unset -v VSCODEURL_INSIDERS_TAR_GZ
    unset -v VSCODE_URL_STABLE
    unset -v VSCODE_SHORTPATH_STABLE
    unset -v VSCODE_CHANNEL_STABLE
    unset -v VSCODE_URL_INSIDER
    unset -v VSCODE_SHORTPATH_INSIDER
    unset -v VSCODE_CHANNEL_INSIDER

    # ========================================================================

  }

  ## DOWNLOAD FROM MICROSOFT
  {
    # † ======================================================================

    echo "DOWNLOAD FROM MICROSOFT (into $download_location)"
    (ls ${download_location}) || exit 5
    cd ${download_location}

    echo -e "> download ${vscode_channel}-x64.tar.gz from microsoft server"
    (sudo curl -LORJS# 'https://update.code.visualstudio.com/latest/linux-x64/stable') || exit 4

    # ========================================================================
  }

  ## EXTRACT FROM TAR FILE
  {
    # † ======================================================================
    cd ${working_location}
    (ls ${download_location}/code-stable-x64-*.tar.gz) || exit 5

    for file_ in $(ls ${download_location}/code-stable-x64-*.tar.gz); do
      (
        sudo tar --extract -f ${file_} --overwrite #--one-top-level="vs-${vscodeshortpath}" ## WHERE THE MAGIC HAPPENS
      ) || exit 6
    done
    # ========================================================================
  }

  {
    mv "${working_location}/VSCode-linux-x64" "${working_location}/vs-${vscodeshortpath}"

    sudo mkdir -p "${working_location}/vs-${vscodeshortpath}/data/tmp"
    vs_code_='code_'
    if [[ "${2}" = 'UPDATE' ]]; then
      vs_code_='code_update_'
    fi

    vs_code_home_path="${HOME}/portable-vscode"
    full_path_to_vscode_home_folder="${vs_code_home_path}/$(date +%d-%m-%C%y_%Hh%Mm%Ss)_${vs_code_}${myUXIDshort}"

    mkdir -p "${vs_code_home_path}/"

    (sudo groupadd -f "luxcium.io" &>/dev/null)
    (sudo chown -R ${iamtheuser} "${working_location}")
    (sudo chgrp -R "luxcium.io" "${working_location}")

    cp -r /etc/vscode-portable/templates/vs-code/icons/ ${working_location}/vs-${vscodeshortpath}/
    cp -r /etc/vscode-portable/templates/vs-code/.directory ${working_location}/vs-${vscodeshortpath}/
    cp -r "${working_location}/vs-${vscodeshortpath}/" "${full_path_to_vscode_home_folder}/"
    cp -r "/etc/vscode-portable/templates/vs-code/icons/folder-vscode.svg" "${full_path_to_vscode_home_folder}/code.svg"
    sudo rm -rf "${working_location}"
    # ========================================================================
  } || (
    EX_STATUS="${?}"
    echo -e "\n   -ERROR-" && exit ${EX_STATUS}
  ) &&
    if [[ "${2}" = 'UPDATE' ]]; then
      echo -e "\n   -UPDATE-" && return 0
    else
      echo -e "\n   -OK-" && return 0
    fi
}
# ==============================================================================

## Extra code make it easy to copy paste only the function out to use elsewhere
getvscodeportable_ ${@}

EX_STATUS="${?}"

unset -f getvscodeportable_

exit ${EX_STATUS}

# Download type	URL
# Windows 64 bit zip	https://update.code.visualstudio.com/{version}/win32-x64-archive/stable
# Windows 64 bit ARM zip	https://update.code.visualstudio.com/{version}/win32-arm64-archive/stable
# Windows 32 bit zip	https://update.code.visualstudio.com/{version}/win32-archive/stable
# macOS	https://update.code.visualstudio.com/{version}/darwin/stable
# Linux 64 bit	https://update.code.visualstudio.com/{version}/linux-x64/stable
# Linux ARM	https://update.code.visualstudio.com/{version}/linux-armhf/stable
# Linux 64 bit ARM	https://update.code.visualstudio.com/{version}/linux-arm64/stable

# ❯ wget https://update.code.visualstudio.com/latest/linux-x64/stable
# --2021-06-05 09:16:53--  https://update.code.visualstudio.com/latest/linux-x64/stable

# Résolution de update.code.visualstudio.com (update.code.visualstudio.com)… 40.64.128.224
# Connexion à update.code.visualstudio.com (update.code.visualstudio.com)|40.64.128.224|:443… connecté.
# requête HTTP transmise, en attente de la réponse… 302 Found
# Emplacement : https://az764295.vo.msecnd.net/stable/054a9295330880ed74ceaedda236253b4f39a335/code-stable-x64-1620838810.tar.gz [suivant]
# --2021-06-05 09:16:53--  https://az764295.vo.msecnd.net/stable/054a9295330880ed74ceaedda236253b4f39a335/code-stable-x64-1620838810.tar.gz

# Résolution de az764295.vo.msecnd.net (az764295.vo.msecnd.net)… 152.199.4.33
# Connexion à az764295.vo.msecnd.net (az764295.vo.msecnd.net)|152.199.4.33|:443… connecté.
# requête HTTP transmise, en attente de la réponse… 200 OK
# Taille : 104824843 (100M) [application/gzip]
# Sauvegarde en : « stable »

# stable                                          100%[====================================================================================================>]  99,97M  58,5MB/s    ds 1,7s

# 2021-06-05 09:16:55 (58,5 MB/s) — « stable » sauvegardé [104824843/104824843]

# Download_type=''
# Download_win_x86_64='win32-x64-archive'
# Download_win_ARM64='win32-arm64-archive'
# Download_win32='win32-archive'
# Download_macOS='darwin'
# Download_linux_x86_64='linux-x64'
# Download_linux_armhf='linux-armhf'
# Download_linux_arm64='linux-arm64'

# git clone https://github.com/microsoft/vscode.git
function oss() {

  iamtheuser="$(whoami)"

  (
    sudo dnf distro-sync -y --refresh
    sudo dnf groupinstall "Development Tools" -y && sudo dnf reinstall libX11-devel.x86_64 libxkbfile-devel.x86_64 libsecret-devel fakeroot rpm make pkg-config gcc git -y
    fnm install 14
    fnm use 14
    npm install -g yarn@latest gulp@latest typescript@latest
    conda update conda -y
    conda update --all -y
    sudo rm -fr ~/.node-gyp
    sudo rm -fr ~/.cache/node-gyp
    chdir /tmp
    working_location='/etc/vscode-portable/src/latest'
    sudo rm -fr "${working_location}"
    sudo mkdir -p "${working_location}"
    sudo gh repo clone microsoft/vscode "${working_location}"
    chdir "${working_location}"
    (sudo groupadd "luxcium.io" &>/dev/null)
    (sudo chown -R ${iamtheuser} "${working_location}")
    (sudo chgrp -R "luxcium.io" "${working_location}")
    chdir "${working_location}"
    wget https://github.com/Luxcium/pop-n-lock-theme-vscode/raw/master/pop-n-lock-theme-vscode-3.31.0.vsix
    yarn install
    yarn add -D yarn@latest npm@latest
    yarn electron
    # yarn update-grammars
    yarn compile
    yarn compile-build
    # yarn watch
    # ./scripts/code.sh
  ) || (
    EX_STATUS="${?}"
    echo -e "\n   -ERROR-" && exit ${EX_STATUS}
  ) &&
    echo -e "\n   -OK-" && exit 0

}
# (sudo nice -n "${_NICE_VAL}" ionice -c "${_IONICE_C}" -n 1 chown -R ${iamtheuser} "${working_location}") || exit 1

# gh repo clone microsoft/vscode /etc/vscode-portable/src/latest

# sudo rm -fr /etc/vscode-portable/src/latest
# sudo mkdir -p /etc/vscode-portable/src/latest
# sudo gh repo clone microsoft/vscode /etc/vscode-portable/src/latest
# sudo cd /etc/vscode-portable/src/latest
# (sudo chown -R "$(whoami)" /etc/vscode-portable/src/latest)
# npm install -g yarn@latest
# yarn install

function dothe_() {
  (
    # Backup my vscode and my insiders into /etc/vscode-portable/backup

    sudo mkdir -p "/etc/vscode-portable/backup/code/data/user-data"
    sudo mkdir -p "/etc/vscode-portable/backup/code/data/tmp"
    sudo mkdir -p "/etc/vscode-portable/backup/code/data/extensions"

    sudo mkdir -p "/etc/vscode-portable/backup/code-insiders/data/user-data"
    sudo mkdir -p "/etc/vscode-portable/backup/code-insiders/data/tmp"
    sudo mkdir -p "/etc/vscode-portable/backup/code-insiders/data/extensions"

    ## TODO: REMOVE HARD CONFIGURED LINKS
    (sudo cp -vuLr /home/luxcium/.config/Code/* /etc/vscode-portable/backup/code/data/user-data/)
    (sudo cp -vuLr /home/luxcium/.vscode/extensions/* /etc/vscode-portable/backup/code/data/extensions/)

    (sudo cp -vuLr /home/luxcium/.config/'Code - Insiders'/* /etc/vscode-portable/backup/code-insiders/data/user-data/)
    (sudo cp -vuLr /home/luxcium/.vscode-insiders/extensions/* /etc/vscode-portable/backup/code-insiders/data/extensions/)
  ) &>/dev/null
  if [[ -d "/etc/vscode-portable/vs-${vscodeshortpath}/" ]]; then
    (cp -r "/etc/vscode-portable/templates/vs-${vscodeshortpath}/" "${working_location}") || exit 8
    echo "cp -r /etc/vscode-portable/templates/vs-${vscodeshortpath}/ into: ${working_location}"
    exit 108
  else
    (mkdir -p "${working_location}/vs-${vscodeshortpath}/data/tmp") || exit 9
    exit 109
  fi
}

function move_over() {

  echo "'${myUXIDshort}':"
  echo "${full_path_to_vscode_home_folder}/"
  echo "${full_path_to_vscode_home_folder}/bin/code"
  cd "${full_path_to_vscode_home_folder}/"

  if [[ "${2}" = 'UPDATE' ]]; then
    rm -fr "${full_path_to_vscode_home_folder}/project"
    rm -fr "${full_path_to_vscode_home_folder}/data"

    if [[ "${1}" = 'INSIDERS' ]]; then
      rm -fr "${full_path_to_vscode_home_folder}/code-insiders.png"
      cp "${full_path_to_vscode_home_folder}/icons/visual-studio-code-insiders..bsvg" "${full_path_to_vscode_home_folder}/code-insiders.svg"
    else
      rm -fr "${full_path_to_vscode_home_folder}/code.png"
      cp "${full_path_to_vscode_home_folder}/icons/visualstudiocode.svg" "${full_path_to_vscode_home_folder}/code.svg"
    fi
  fi
}

## UTILITY FUNCTIONS DEFINITIONS
# † ======================================================================

function RANDMX() {
  rand1=$(sha224sum <<<$(date +%s%N) | cut -c -${1} | tr \[a-z\] \[A-Z\])
  echo -n "${rand1}"
  return 0
}

function shortID() {
  local fooZ="$(date +%s)-x$(RANDMX 4)"

  echo -n $fooZ
  return 0
}
function LUXID() {
  local myxuidhash="$(RANDMX 10)"
  local myxuiddate="$(date +%C%y%m%d%H%M%S)$(date +%N | cut -c -3)"
  local fooY="${myxuidhash}LXZ${myxuiddate}ID"
  local fooZ="${fooY:0:1}${fooY:13:2}${fooY:1:1}${fooY:15:2}${fooY:2:1}${fooY:17:2}${fooY:3:1}${fooY:19:2}${fooY:4:1}${fooY:21:2}${fooY:5:1}${fooY:23:2}${fooY:6:1}${fooY:10:2}${fooY:30:2}${fooY:12:1}${fooY:7:1}${fooY:25:2}${fooY:8:1}${fooY:27:3}${fooY:9:1}"

  echo -n $fooZ
  exit 0
}
# ========================================================================

function getvscodeportable_old() {
  (cd /tmp) || exit 1
  (
    ## CONSTANTS AND VARIABLES DEFINITIONS
    {
      # † ======================================================================

      VSCODEURL_STABLE_RPM='https://go.microsoft.com/fwlink/?LinkID=760867'
      VSCODEURL_STABLE_TAR_GZ='https://go.microsoft.com/fwlink/?LinkID=620884'
      VSCODEURL_INSIDERS_RPM='https://go.microsoft.com/fwlink/?LinkID=760866'
      VSCODEURL_INSIDERS_TAR_GZ='https://go.microsoft.com/fwlink/?LinkId=723968'
      VSCODESHORTPATH_STABLE='code'
      VSCODESHORTPATH_INSIDERS='code-insiders'
      VSINSIDERSCHANNEL='INSIDERS'
      VSCODESTABLECHANNEL='STABLE'

      # ========================================================================

      ## CUSTOM VARIABLES DEFINITIONS
      # † ======================================================================

      # sudo nice -n -15 ionice -c 1 -n 1
      _NICE_VAL='35'
      _IONICE_C='2'
      # _IONICE_N='2'

      #       Options :
      #   -c, --class <classe>  nom ou numéro de classe d'ordonnancement
      #                           0 : aucune,
      #                           1 : temps réel,
      #   -n, --classdata <nbr> priorité (0-7) dans les classes d'ordonnancement
      #                           2 : au mieux,
      #   -n, --classdata <nbr> priorité (0-7) dans les classes d'ordonnancement
      #                           3 : au ralenti

      vscodetargz="${VSCODEURL_STABLE_TAR_GZ}"
      vscodeshortpath="${VSCODESHORTPATH_STABLE}"
      vschannel="${VSCODESTABLECHANNEL}"

      iamtheuser="$(whoami)"

      ## vschannel="${1}" # 'STABLE' or 'INSIDERS'
      if [[ "${1}" = 'INSIDERS' ]]; then
        vschannel="${VSINSIDERSCHANNEL}"
        vscodetargz="${VSCODEURL_INSIDERS_RPM}"
        vscodeshortpath="${VSCODESHORTPATH_INSIDERS}"
      else
        vschannel="${VSCODESTABLECHANNEL}"
        vscodetargz="${VSCODEURL_STABLE_TAR_GZ}"
        vscodeshortpath="${VSCODESHORTPATH_STABLE}"
      fi

      # ========================================================================

      ## UTILITY FUNCTIONS DEFINITIONS
      # † ======================================================================

      function RANDMX() {
        rand1=$(sha224sum <<<$(date +%s%N) | cut -c -${1} | tr \[a-z\] \[A-Z\])
        echo -n "${rand1}"
        exit 0
      }

      function LUXID() {
        local myxuidhash="$(RANDMX 10)"
        local myxuiddate="$(date +%C%y%m%d%H%M%S)$(date +%N | cut -c -3)"
        local fooY="${myxuidhash}LXZ${myxuiddate}ID"
        local fooZ="${fooY:0:1}${fooY:13:2}${fooY:1:1}${fooY:15:2}${fooY:2:1}${fooY:17:2}${fooY:3:1}${fooY:19:2}${fooY:4:1}${fooY:21:2}${fooY:5:1}${fooY:23:2}${fooY:6:1}${fooY:10:2}${fooY:30:2}${fooY:12:1}${fooY:7:1}${fooY:25:2}${fooY:8:1}${fooY:27:3}${fooY:9:1}"

        echo -n $fooZ
        exit 0
      }
      # ========================================================================

      ## INTERNAL VARIABLES DEFINITIONS
      # † ======================================================================

      myuxidlong="$(LUXID)"
      working_location="$(echo LXCM-vscode-$(date +%s)-${myuxidlong}-${vschannel} | tr \[a-z\] \[A-Z\])"
      working_location="/tmp/${working_location}"
      download_location="${working_location}/download"

      ## CREATE THE DOWNLOAD FOLDER IN /tmp
      # † ======================================================================

      (sudo nice -n "${_NICE_VAL}" ionice -c "${_IONICE_C}" -n 1 mkdir -p "${download_location}") || exit 2
      (sudo nice -n "${_NICE_VAL}" ionice -c "${_IONICE_C}" -n 1 chown -R ${iamtheuser} "${working_location}") || exit 3

      # ========================================================================

      echo VSCODEURL_STABLE_TAR_GZ: $VSCODEURL_STABLE_TAR_GZ
      echo VSCODESHORTPATH_STABLE: $VSCODESHORTPATH_STABLE
      echo VSCODESTABLECHANNEL: $VSCODESTABLECHANNEL
      echo VSINSIDERSCHANNEL: $VSINSIDERSCHANNEL
      echo VSCODEURL_INSIDERS_RPM: $VSCODEURL_INSIDERS_RPM
      echo VSCODESHORTPATH_INSIDERS: $VSCODESHORTPATH_INSIDERS
      # echo rand1: $rand1

      unset -v VSCODEURL_STABLE_RPM
      unset -v VSCODEURL_STABLE_TAR_GZ
      unset -v VSCODEURL_INSIDERS_RPM
      unset -v VSCODEURL_INSIDERS_TAR_GZ
      unset -v VSCODESHORTPATH_STABLE
      unset -v VSCODESHORTPATH_INSIDERS
      unset -v VSINSIDERSCHANNEL
      unset -v VSCODESTABLECHANNEL
      unset -f RANDMX
      unset -f LUXID
    }

    ## DOWNLOAD FROM MICROSOFT
    {
      # † ======================================================================
      echo "DOWNLOAD FROM MICROSOFT (into $download_location)"
      ls ${download_location}
      cd ${download_location}

      #  code-stable-x64-1620838810.tar.gz

      echo -e "\n >    download ${vschannel}.x86_64.tar.gz from microsoft server"
      (sudo nice -n "${_NICE_VAL}" ionice -c "${_IONICE_C}" -n 1 curl -O -L -J -S# "${vscodetargz}") || exit 4
      # ========================================================================

      myUXIDshort="$(date +%s)-${myuxidlong:7:11}L-${vschannel}"

      cd ${working_location}

      (ls ${download_location}/code-stable-x64-*.tar.gz) || exit 5
      for file_ in $(ls ${download_location}/code-stable-x64-*.tar.gz); do
        (
          tar --extract -f ${file_} --overwrite --one-top-level="vs-${vscodeshortpath}" ## WHERE THE MAGIC HAPPENS
          # sudo nice -n "${_NICE_VAL}" ionice -c "${_IONICE_C}" -n 1 rpm2cpio "$f" |
          # sudo nice -n "${_NICE_VAL}" ionice -c "${_IONICE_C}" -n 1 cpio -idm --no-absolute-filenames &>/dev/null
        ) || exit 6
      done
      # VSCode-linux-x64

      # (sudo nice -n "${_NICE_VAL}" ionice -c "${_IONICE_C}" -n 1
      #  >/dev/null)
      (sudo chown -R ${iamtheuser} "${working_location}") || exit 7

      # ========================================================================
    }
    # https://github.com/Luxcium/pop-n-lock-theme-vscode/raw/master/pop-n-lock-theme-vscode-3.31.0.vsix
    ## CREATING THE PORTABLE VERSION
    {
      # † ======================================================================
      # vscodeshortpath_=$vscodeshortpath #XXX:
      # vscodeshortpath=VSCode-linux-x64  #XXX:
      # echo working_location: $working_location
      # echo vscodeshortpath_: $vscodeshortpath_

      (zsh -c vsbackup) &>/dev/null
      if [[ -d "/etc/vscode-portable/vs-${vscodeshortpath}/" ]]; then
        (cp -r "/etc/vscode-portable/templates/vs-${vscodeshortpath}/" "${working_location}") || exit 8
        echo "cp -r /etc/vscode-portable/templates/vs-${vscodeshortpath}/ into: ${working_location}"
        exit 108
      else
        (mkdir -p "${working_location}/vs-${vscodeshortpath}/data/tmp") || exit 9
        exit 109
      fi

      exit 100
      # ========================================================================

      ( (sudo cp -uLr /etc/vscode-portable/backup/${vscodeshortpath}/data/user-data ${working_location}/vs-${vscodeshortpath}/data/user-data) &>/dev/null) || exit 10 #

      ( (sudo cp -vuLr /etc/vscode-portable/backup/${vscodeshortpath}/data/extensions ${working_location}/vs-${vscodeshortpath}/data/) &>/dev/null) || exit 11 #&>/dev/null

      (cp -r "${working_location}/usr/share/${vscodeshortpath}" "${working_location}/tmp-${vscodeshortpath}") || echo error 12
      (cp -r "${working_location}/usr/share/pixmaps/" "${working_location}/vs-${vscodeshortpath}/pixmaps/") || echo error 13

      for f in $(ls "${working_location}/tmp-${vscodeshortpath}"); do
        sudo nice -n "${_NICE_VAL}" ionice -c "${_IONICE_C}" -n 1 cp -r "${working_location}/tmp-${vscodeshortpath}/$f" "${working_location}/vs-${vscodeshortpath}/" || exit 14
      done

      # echo working_location: $working_location
      # echo vscodeshortpath: $vscodeshortpath
      exit 111
      # ========================================================================
    }

    ## MOVING STUFF TO HOME FOLDER
    {
      # † ======================================================================

      vs_code_='code_'
      if [[ "${2}" = 'UPDATE' ]]; then
        vs_code_='code_update_'
      fi

      vs_code_home_path="${HOME}/portable-vscode"
      full_path_to_vscode_home_folder="${vs_code_home_path}/$(date +%d-%m-%C%y_%Hh%Mm%Ss)_${vs_code_}${myUXIDshort}"

      mkdir -p "${vs_code_home_path}/"

      (sudo nice -n "${_NICE_VAL}" ionice -c "${_IONICE_C}" -n 1 chown -R ${iamtheuser} "${working_location}") || exit 1
      (sudo groupadd "luxcium.io" &>/dev/null)
      (sudo nice -n "${_NICE_VAL}" ionice -c "${_IONICE_C}" -n 1 chgrp -R "luxcium.io" "${working_location}")

      mv "${working_location}/vs-${vscodeshortpath}/" "${full_path_to_vscode_home_folder}/"
      sudo rm -rf "${working_location}"

      echo "'${myUXIDshort}':"
      echo "${full_path_to_vscode_home_folder}/"
      echo "${full_path_to_vscode_home_folder}/bin/code"
      cd "${full_path_to_vscode_home_folder}/"

      if [[ "${2}" = 'UPDATE' ]]; then
        rm -fr "${full_path_to_vscode_home_folder}/project"
        rm -fr "${full_path_to_vscode_home_folder}/data"

        if [[ "${1}" = 'INSIDERS' ]]; then
          rm -fr "${full_path_to_vscode_home_folder}/code-insiders.png"
          cp "${full_path_to_vscode_home_folder}/icons/visual-studio-code-insiders..bsvg" "${full_path_to_vscode_home_folder}/code-insiders.svg"
        else
          rm -fr "${full_path_to_vscode_home_folder}/code.png"
          cp "${full_path_to_vscode_home_folder}/icons/visualstudiocode.svg" "${full_path_to_vscode_home_folder}/code.svg"
        fi
      fi
      # ========================================================================
    }
  ) || (
    EX_STATUS="${?}"
    echo -e "\n   -ERROR-" && exit ${EX_STATUS}
  ) &&
    if [[ "${2}" = 'UPDATE' ]]; then
      echo -e "\n   -UPDATE-" && return 0
    else
      echo -e "\n   -OK-" && return 0
    fi
}

# sudo curl -LORJS#v 'https://go.microsoft.com/fwlink/?LinkID=620884'
# code-stable-x64-1623937300.tar.gz
# sudo curl -LORJS#v 'https://go.microsoft.com/fwlink/?LinkId=723968'
# code-insider-x64-1625031189.tar.gz
